name: Deploy Spring Boot Backend (Docker Compose)

on:
  push:
    branches: [ deploy ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REMOTE_DIR: /home/user/backend/deploy

    steps:
      - name: Checkout code              # pull repo
        uses: actions/checkout@v3

      - name: Set up JDK 17              # install Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build JAR                  # mvn package
        run: |
          chmod +x ./mvnw
          ./mvnw clean package -DskipTests

      - name: List build output
        run: ls -lh target

      - name: Ensure JAR file exists
        run: |
          if [ -z "$(ls target/*.jar 2>/dev/null)" ]; then
            echo "No JAR found in target/. Check mvn build step."
            exit 1
          fi

      - name: Rename JAR to fixed name
        run: mv target/kykbecayis-0.0.1-SNAPSHOT.jar target/app.jar

      - name: Validate docker build      # ensure Dockerfile builds
        run: docker compose build

      - name: Confirm files exist before compression
        run: ls -lh Dockerfile docker-compose.yml target/app.jar entry.sh

      - name: Compress to be sent files
        run: tar czf bundle.tar.gz Dockerfile docker-compose.yml target/app.jar entry.sh

      - name: Copy the bundle.tar.gz to server       # send compose bundle
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "bundle.tar.gz"
          target: ${{ env.REMOTE_DIR }}

      - name: Deploy containers          # ssh + compose up
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            # go to target directory
            cd ${{ env.REMOTE_DIR }}
            
            # unzip the files and delete the tar
            tar xzf bundle.tar.gz
            rm bundle.tar.gz
            
            # honestly this is a mess, but it'll have to do for now
            cp ../.env .env
            cp ../dorms.json dorms.json
            
            # close down the old container if it is on
            docker-compose down --remove-orphans
            docker-compose pull postgres || true
            docker-compose up --build -d 
